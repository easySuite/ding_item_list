<?php
/**
 * @file
 * Provide a ding item list field which can be used inside nodes.
 */

/**
 * Implements hook_field_info().
 */
function ding_item_list_field_field_info() {
  $field = array();

  $field['ding_item_list_field'] = array(
    'label' => t('Ding item list'),
    'description' => t('Custom search results'),
    'default_widget' => 'ding_item_list_field_search_form',
    'default_formatter' => 'ding_item_list_field_default',
  );

  return $field;
}

/**
 * Implements hook_field_is_empty().
 */
function ding_item_list_field_field_is_empty($item, $field) {
  if ($field['type'] == 'ding_item_list_field') {
    if (empty($item['query'])) {
      return TRUE;
    }
  }

  return FALSE;
}

/**
 * Implements hook_field_widget_info().
 */
function ding_item_list_field_field_widget_info() {
  $widget = array();

  $widget['ding_item_list_field_search_form'] = array(
    'label' => t('Ding item list default'),
    'field types' => array('ding_item_list_field'),
  );

  return $widget;
}

/**
 * Implements hook_field_widget_form().
 */
function ding_item_list_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  if ($instance['widget']['type'] == 'ding_item_list_field_search_form') {
    $element['title'] = array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#default_value' => isset($items[$delta]['title']) ? $items[$delta]['title'] : '',
      '#maxlength' => 255,
    );

    $element['query'] = array(
      '#type' => 'textfield',
      '#title' => t('Ting query string'),
      '#default_value' => isset($items[$delta]['query']) ? $items[$delta]['query'] : '',
      '#maxlength' => 512,
      '#element_validate' => array('_ding_item_list_field_query_cc'),
    );

    $element['count'] = array(
      '#type' => 'textfield',
      '#title' => t('Items count'),
      '#default_value' => isset($items[$delta]['count']) ? $items[$delta]['count'] : 3,
      '#size' => 3,
      '#element_validate' => array('_element_validate_integer_positive'),
    );

    $element['sort'] = array(
      '#type' => 'select',
      '#title' => t('Sorting'),
      '#options' => array(
        '' => t('- None -'),
        'title_ascending' => t('Title (Ascending)'),
        'title_descending' => t('Title (Descending)'),
        'creator_ascending' => t('Creator (Ascending)'),
        'creator_descending' => t('Creator (Descending)'),
        'date_ascending' => t('Date (Ascending)'),
        'date_descending' => t('Date (Descending)'),
        'acquisitionDate_ascending' => t('Acquisition date (Ascending)'),
        'acquisitionDate_descending' => t('Acquisition date (Descending)'),
      ),
      '#default_value' => isset($items[$delta]['sort']) ? $items[$delta]['sort'] : '',
      '#description' => t('If not set, defaults to Ranking'),
    );

    $element['#submit'] = array('_ding_item_list_field_element_submit');
  }

  return $element;
}

/**
 * In order to be able to reset the cache of item list when node is saved,
 * a validatiuon handler is attached to the query field.
 *
 * No actual validation is performed here.
 */
function _ding_item_list_field_query_cc($element, &$form_state, $form) {
  $cid = ding_item_list_generate_cache_id($element['#value']);
  cache_clear_all($cid, 'cache_ding_item');
}

/**
 * Implements hook_field_formatter_info().
 */
function ding_item_list_field_field_formatter_info() {
  $formatter = array();

  $formatter['ding_item_list_field_default'] = array(
    'label' => t('Default'),
    'field types' => array('ding_item_list_field'),
  );

  return $formatter;
}

/**
 * Implements hook_field_formatter_view().
 */
function ding_item_list_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'ding_item_list_field_default':
      foreach ($items as $delta => $item) {
        $markup = ding_item_list_get_content($item['query'], $item['count'], $item['sort']);
        $element[$delta]['#prefix'] = '<h2 class=ding-item-list-title>' . $item['title'] . '</h2>';
        $element[$delta]['#markup'] = theme('ding_item_list_list', array('items' => $markup));
        $element[$delta]['#attached']['css'] = array(
          drupal_get_path('module', 'ding_item_list') . '/css/ding_item_list.css',
        );
      }

      break;
  }

  return $element;
}
